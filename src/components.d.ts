/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { AbdullakhMyHeader, } from "./components/res/view/my-header/interface/common.interface";
export namespace Components {
    interface AppBlog {
        "p": any;
    }
    interface EventsA {
        /**
          * массив компоненту Events
         */
        "events": any[];
        /**
          * заголовок компонента Events
         */
        "eventsTitle": string;
    }
    interface FooterA {
        "footer": any;
    }
    interface MenuItem {
        /**
          * массив меню
         */
        "arr": any;
    }
    interface MyComponent {
    }
    interface MyHeader {
        /**
          * ссылка на изображение логотипа
         */
        "logoUrl": string;
        /**
          * массив меню
         */
        "menu": AbdullakhMyHeader[];
        /**
          * ссылка на изображение логотипа
         */
        "subscribeText": string;
    }
    interface NewListiner {
        "newlistner": any[];
    }
    interface NewPost {
        /**
          * массив newsPost
         */
        "newPost": any[];
        /**
          * текст заголовка
         */
        "newPostTitle": string;
    }
    interface NewSinglePost {
        /**
          * массив блоков в компоненте newSinglePost
         */
        "arr": any;
    }
    interface NewsA {
        /**
          * массив news-main-block
         */
        "news": any[];
        /**
          * ссылка на изображение логотипа
         */
        "newsImg": string;
        /**
          * массив Sidebar
         */
        "sidebar": any[];
    }
    interface PopularResources {
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "popularAside": any[];
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "popularAsideTitle": string;
        /**
          * массив для блоков компонента popular-resources-banner
         */
        "popularBanner": any[];
    }
    interface PopularResourcesAside {
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "arr": any;
    }
    interface PopularResourcesBanner {
        /**
          * массив для блоков компонента popular-resources-banner
         */
        "arr": any;
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "popularAsideTitle": string;
    }
    interface SAbdullakhFooterMenu {
        /**
          * массив элементов Sidebar
         */
        "arr": any;
    }
    interface SAbdullakhListiner {
        /**
          * массив Listener
         */
        "arr": any;
    }
    interface SAbdullakhNewsMainBlock {
        /**
          * массив Sidebar
         */
        "arr": any;
    }
    interface SidebarA {
        /**
          * массив элементов Sidebar
         */
        "arr": any;
    }
}
declare global {
    interface HTMLAppBlogElement extends Components.AppBlog, HTMLStencilElement {
    }
    var HTMLAppBlogElement: {
        prototype: HTMLAppBlogElement;
        new (): HTMLAppBlogElement;
    };
    interface HTMLEventsAElement extends Components.EventsA, HTMLStencilElement {
    }
    var HTMLEventsAElement: {
        prototype: HTMLEventsAElement;
        new (): HTMLEventsAElement;
    };
    interface HTMLFooterAElement extends Components.FooterA, HTMLStencilElement {
    }
    var HTMLFooterAElement: {
        prototype: HTMLFooterAElement;
        new (): HTMLFooterAElement;
    };
    interface HTMLMenuItemElement extends Components.MenuItem, HTMLStencilElement {
    }
    var HTMLMenuItemElement: {
        prototype: HTMLMenuItemElement;
        new (): HTMLMenuItemElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLMyHeaderElement extends Components.MyHeader, HTMLStencilElement {
    }
    var HTMLMyHeaderElement: {
        prototype: HTMLMyHeaderElement;
        new (): HTMLMyHeaderElement;
    };
    interface HTMLNewListinerElement extends Components.NewListiner, HTMLStencilElement {
    }
    var HTMLNewListinerElement: {
        prototype: HTMLNewListinerElement;
        new (): HTMLNewListinerElement;
    };
    interface HTMLNewPostElement extends Components.NewPost, HTMLStencilElement {
    }
    var HTMLNewPostElement: {
        prototype: HTMLNewPostElement;
        new (): HTMLNewPostElement;
    };
    interface HTMLNewSinglePostElement extends Components.NewSinglePost, HTMLStencilElement {
    }
    var HTMLNewSinglePostElement: {
        prototype: HTMLNewSinglePostElement;
        new (): HTMLNewSinglePostElement;
    };
    interface HTMLNewsAElement extends Components.NewsA, HTMLStencilElement {
    }
    var HTMLNewsAElement: {
        prototype: HTMLNewsAElement;
        new (): HTMLNewsAElement;
    };
    interface HTMLPopularResourcesElement extends Components.PopularResources, HTMLStencilElement {
    }
    var HTMLPopularResourcesElement: {
        prototype: HTMLPopularResourcesElement;
        new (): HTMLPopularResourcesElement;
    };
    interface HTMLPopularResourcesAsideElement extends Components.PopularResourcesAside, HTMLStencilElement {
    }
    var HTMLPopularResourcesAsideElement: {
        prototype: HTMLPopularResourcesAsideElement;
        new (): HTMLPopularResourcesAsideElement;
    };
    interface HTMLPopularResourcesBannerElement extends Components.PopularResourcesBanner, HTMLStencilElement {
    }
    var HTMLPopularResourcesBannerElement: {
        prototype: HTMLPopularResourcesBannerElement;
        new (): HTMLPopularResourcesBannerElement;
    };
    interface HTMLSAbdullakhFooterMenuElement extends Components.SAbdullakhFooterMenu, HTMLStencilElement {
    }
    var HTMLSAbdullakhFooterMenuElement: {
        prototype: HTMLSAbdullakhFooterMenuElement;
        new (): HTMLSAbdullakhFooterMenuElement;
    };
    interface HTMLSAbdullakhListinerElement extends Components.SAbdullakhListiner, HTMLStencilElement {
    }
    var HTMLSAbdullakhListinerElement: {
        prototype: HTMLSAbdullakhListinerElement;
        new (): HTMLSAbdullakhListinerElement;
    };
    interface HTMLSAbdullakhNewsMainBlockElement extends Components.SAbdullakhNewsMainBlock, HTMLStencilElement {
    }
    var HTMLSAbdullakhNewsMainBlockElement: {
        prototype: HTMLSAbdullakhNewsMainBlockElement;
        new (): HTMLSAbdullakhNewsMainBlockElement;
    };
    interface HTMLSidebarAElement extends Components.SidebarA, HTMLStencilElement {
    }
    var HTMLSidebarAElement: {
        prototype: HTMLSidebarAElement;
        new (): HTMLSidebarAElement;
    };
    interface HTMLElementTagNameMap {
        "app-blog": HTMLAppBlogElement;
        "events-a": HTMLEventsAElement;
        "footer-a": HTMLFooterAElement;
        "menu-item": HTMLMenuItemElement;
        "my-component": HTMLMyComponentElement;
        "my-header": HTMLMyHeaderElement;
        "new-listiner": HTMLNewListinerElement;
        "new-post": HTMLNewPostElement;
        "new-single-post": HTMLNewSinglePostElement;
        "news-a": HTMLNewsAElement;
        "popular-resources": HTMLPopularResourcesElement;
        "popular-resources-aside": HTMLPopularResourcesAsideElement;
        "popular-resources-banner": HTMLPopularResourcesBannerElement;
        "s-abdullakh-footer-menu": HTMLSAbdullakhFooterMenuElement;
        "s-abdullakh-listiner": HTMLSAbdullakhListinerElement;
        "s-abdullakh-news-main-block": HTMLSAbdullakhNewsMainBlockElement;
        "sidebar-a": HTMLSidebarAElement;
    }
}
declare namespace LocalJSX {
    interface AppBlog {
        "p"?: any;
    }
    interface EventsA {
        /**
          * массив компоненту Events
         */
        "events"?: any[];
        /**
          * заголовок компонента Events
         */
        "eventsTitle"?: string;
        /**
          * клик по кнопке Read Report в компоненте newSinglePost
         */
        "onClickOnEvents"?: (event: CustomEvent<any>) => void;
        /**
          * клик по в компоненте NewSinglePost
         */
        "onClickOnNewSinglePost"?: (event: CustomEvent<any>) => void;
    }
    interface FooterA {
        "footer"?: any;
        "onClickOnFooter"?: (event: CustomEvent<any>) => void;
    }
    interface MenuItem {
        /**
          * массив меню
         */
        "arr"?: any;
        /**
          * клик по конкретному меню
         */
        "onClickOnMenu"?: (event: CustomEvent<any>) => void;
    }
    interface MyComponent {
    }
    interface MyHeader {
        /**
          * ссылка на изображение логотипа
         */
        "logoUrl"?: string;
        /**
          * массив меню
         */
        "menu"?: AbdullakhMyHeader[];
        /**
          * клик по input
         */
        "onClickOnInput"?: (event: CustomEvent<any>) => void;
        /**
          * клик по логотипу
         */
        "onClickOnLogo"?: (event: CustomEvent<any>) => void;
        /**
          * клик по конкретному меню
         */
        "onClickOnMenu"?: (event: CustomEvent<AbdullakhMyHeader>) => void;
        /**
          * клик по кнопке search
         */
        "onClickOnSeach"?: (event: CustomEvent<any>) => void;
        /**
          * клик по кнопке подписаться
         */
        "onClickOnSubscribeButton"?: (event: CustomEvent<any>) => void;
        /**
          * клик по перключателю тем
         */
        "onClickOnSwitch"?: (event: CustomEvent<any>) => void;
        /**
          * ссылка на изображение логотипа
         */
        "subscribeText"?: string;
    }
    interface NewListiner {
        "newlistner"?: any[];
        /**
          * клик в Listiner
         */
        "onClickOnListiner"?: (event: CustomEvent<any>) => void;
    }
    interface NewPost {
        /**
          * массив newsPost
         */
        "newPost"?: any[];
        /**
          * текст заголовка
         */
        "newPostTitle"?: string;
        /**
          * клик по в компоненте NewPost
         */
        "onClickNewPost"?: (event: CustomEvent<any>) => void;
        /**
          * клик по в компоненте NewSinglePost
         */
        "onClickOnNewSinglePost"?: (event: CustomEvent<any>) => void;
    }
    interface NewSinglePost {
        /**
          * массив блоков в компоненте newSinglePost
         */
        "arr"?: any;
        /**
          * клик по в компоненте NewSinglePost
         */
        "onClickOnNewSinglePost"?: (event: CustomEvent<any>) => void;
    }
    interface NewsA {
        /**
          * массив news-main-block
         */
        "news"?: any[];
        /**
          * ссылка на изображение логотипа
         */
        "newsImg"?: string;
        /**
          * клик по кнопке в компоненте news
         */
        "onClickOnNews"?: (event: CustomEvent<any>) => void;
        /**
          * массив Sidebar
         */
        "sidebar"?: any[];
    }
    interface PopularResources {
        /**
          * клик по компоненту popular-resources
         */
        "onClickOnPopular"?: (event: CustomEvent<any>) => void;
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "popularAside"?: any[];
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "popularAsideTitle"?: string;
        /**
          * массив для блоков компонента popular-resources-banner
         */
        "popularBanner"?: any[];
    }
    interface PopularResourcesAside {
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "arr"?: any;
        /**
          * клик по компоненту  popular-resources-aside в popular-resources
         */
        "onClickOnPopular"?: (event: CustomEvent<any>) => void;
    }
    interface PopularResourcesBanner {
        /**
          * массив для блоков компонента popular-resources-banner
         */
        "arr"?: any;
        /**
          * клик по кнопке Read Report в Sidebar
         */
        "onClickOnAside"?: (event: CustomEvent<any>) => void;
        /**
          * клик по компоненту  popular-resources-aside в popular-banner
         */
        "onClickOnPopular"?: (event: CustomEvent<any>) => void;
        /**
          * массив для блоков компонента popular-resources-aside
         */
        "popularAsideTitle"?: string;
    }
    interface SAbdullakhFooterMenu {
        /**
          * массив элементов Sidebar
         */
        "arr"?: any;
    }
    interface SAbdullakhListiner {
        /**
          * массив Listener
         */
        "arr"?: any;
        /**
          * клик по кнопке button в Listiner
         */
        "onClickOnListiner"?: (event: CustomEvent<any>) => void;
    }
    interface SAbdullakhNewsMainBlock {
        /**
          * массив Sidebar
         */
        "arr"?: any;
        /**
          * клик по компоненту News
         */
        "onClickOnNews"?: (event: CustomEvent<any>) => void;
    }
    interface SidebarA {
        /**
          * массив элементов Sidebar
         */
        "arr"?: any;
        /**
          * клик по кнопке в компоненте news
         */
        "onClickOnNews"?: (event: CustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "app-blog": AppBlog;
        "events-a": EventsA;
        "footer-a": FooterA;
        "menu-item": MenuItem;
        "my-component": MyComponent;
        "my-header": MyHeader;
        "new-listiner": NewListiner;
        "new-post": NewPost;
        "new-single-post": NewSinglePost;
        "news-a": NewsA;
        "popular-resources": PopularResources;
        "popular-resources-aside": PopularResourcesAside;
        "popular-resources-banner": PopularResourcesBanner;
        "s-abdullakh-footer-menu": SAbdullakhFooterMenu;
        "s-abdullakh-listiner": SAbdullakhListiner;
        "s-abdullakh-news-main-block": SAbdullakhNewsMainBlock;
        "sidebar-a": SidebarA;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-blog": LocalJSX.AppBlog & JSXBase.HTMLAttributes<HTMLAppBlogElement>;
            "events-a": LocalJSX.EventsA & JSXBase.HTMLAttributes<HTMLEventsAElement>;
            "footer-a": LocalJSX.FooterA & JSXBase.HTMLAttributes<HTMLFooterAElement>;
            "menu-item": LocalJSX.MenuItem & JSXBase.HTMLAttributes<HTMLMenuItemElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "my-header": LocalJSX.MyHeader & JSXBase.HTMLAttributes<HTMLMyHeaderElement>;
            "new-listiner": LocalJSX.NewListiner & JSXBase.HTMLAttributes<HTMLNewListinerElement>;
            "new-post": LocalJSX.NewPost & JSXBase.HTMLAttributes<HTMLNewPostElement>;
            "new-single-post": LocalJSX.NewSinglePost & JSXBase.HTMLAttributes<HTMLNewSinglePostElement>;
            "news-a": LocalJSX.NewsA & JSXBase.HTMLAttributes<HTMLNewsAElement>;
            "popular-resources": LocalJSX.PopularResources & JSXBase.HTMLAttributes<HTMLPopularResourcesElement>;
            "popular-resources-aside": LocalJSX.PopularResourcesAside & JSXBase.HTMLAttributes<HTMLPopularResourcesAsideElement>;
            "popular-resources-banner": LocalJSX.PopularResourcesBanner & JSXBase.HTMLAttributes<HTMLPopularResourcesBannerElement>;
            "s-abdullakh-footer-menu": LocalJSX.SAbdullakhFooterMenu & JSXBase.HTMLAttributes<HTMLSAbdullakhFooterMenuElement>;
            "s-abdullakh-listiner": LocalJSX.SAbdullakhListiner & JSXBase.HTMLAttributes<HTMLSAbdullakhListinerElement>;
            "s-abdullakh-news-main-block": LocalJSX.SAbdullakhNewsMainBlock & JSXBase.HTMLAttributes<HTMLSAbdullakhNewsMainBlockElement>;
            "sidebar-a": LocalJSX.SidebarA & JSXBase.HTMLAttributes<HTMLSidebarAElement>;
        }
    }
}
